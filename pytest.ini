[tool:pytest]
# Pytest Configuration for Refactored Legal Database
# Comprehensive test settings for modular architecture

# Test Discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum version requirement
minversion = 7.0

# Add current directory to Python path
addopts =
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=src
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=95
    --cov-branch
    --no-cov-on-fail
    --durations=10
    --maxfail=5
    -ra

# Async testing
asyncio_mode = auto

# Test markers
markers =
    unit: Unit tests that test individual components in isolation
    integration: Integration tests that test component interactions
    api: API endpoint tests
    database: Database-related tests
    slow: Tests that take longer than 1 second
    external: Tests that require external services (Redis, Neo4j)
    pdf: PDF processing tests
    ai: AI service tests
    crawler: Web crawler tests
    search: Search functionality tests
    embedding: Embedding generation tests
    performance: Performance and benchmark tests
    smoke: Basic smoke tests for critical functionality

# Warnings
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*datetime.*:DeprecationWarning
    ignore:.*pkg_resources.*:DeprecationWarning

# Test timeout (seconds)
timeout = 300

# Coverage settings
[coverage:run]
source = src
omit =
    */tests/*
    */test_*
    */__pycache__/*
    */migrations/*
    */venv/*
    */env/*
    setup.py
    conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml
